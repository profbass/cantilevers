@-webkit-keyframes spinAround {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg); } }

@keyframes spinAround {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg); } }

h1,
.content h1 {
  font-family: "Open Sans", sans-serif;
  text-transform: uppercase;
  font-weight: 300;
  letter-spacing: .2em; }
  h1 small,
  .content h1 small {
    font-family: "Playfair Display", serif;
    font-style: italic;
    text-transform: lowercase;
    letter-spacing: 0; }

.content h2,
.content h3,
.content h4,
.content h5,
.content h6,
.content p,
.content li {
  color: #6a7071 !important; }

h2,
h3,
h4,
h5,
h6 .content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  font-family: "Playfair Display", serif;
  letter-spacing: 0.5px;
  font-style: italic;
  font-weight: 300 !important; }

small.title {
  font-family: "Playfair Display", serif;
  display: inline-block;
  text-transform: lowercase;
  font-style: italic; }

.navbar-brand .navbar-item {
  font-family: "Open Sans", sans-serif;
  font-size: 1.25rem;
  font-weight: 200; }

.navbar-start .navbar-item {
  font-family: "Open Sans", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  font-weight: 200; }

p,
li,
article,
section {
  line-height: 180%; }

input,
label,
select,
textarea {
  white-space: normal !important;
  background: none !important;
  line-height: 1 !important;
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  border: none !important; }

input[type="text"],
input[type="email"],
input[type="password"],
input.input,
textarea {
  border-bottom: 1px solid #f0efef !important; }
  input[type="text"]:placeholder,
  input[type="email"]:placeholder,
  input[type="password"]:placeholder,
  input.input:placeholder,
  textarea:placeholder {
    text-transform: uppercase; }

/* Remove the stupid outer glow in Webkit */
input:focus {
  outline: 0; }

#loading {
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  position: fixed;
  display: block;
  background-color: #fff;
  z-index: 1000;
  opacity: 1;
  text-align: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  transition: opacity 0.2s ease-in;
  -o-transition: opacity 0.2s ease-in;
  -ms-transition: opacity 0.2s ease-in;
  -moz-transition: opacity 0.2s ease-in;
  -webkit-transition: opacity 0.2s ease-in; }
  #loading img {
    width: 300px;
    padding: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    margin-left: calc(50vw - 150px);
    margin-top: calc(50vh - 60px);
    -webkit-animation: flickerAnimation 2s infinite;
    animation: flickerAnimation 2s infinite; }
  #loading.hide-loading {
    opacity: 0; }

@keyframes flickerAnimation {
  0% {
    opacity: 1;
    color: #333333; }
  50% {
    opacity: 0;
    fill: #ff00ff; }
  100% {
    opacity: 1;
    color: #333333; } }

@-webkit-keyframes flickerAnimation {
  0% {
    opacity: 1;
    color: #333333; }
  50% {
    opacity: 0;
    fill: #ff00ff; }
  100% {
    opacity: 1;
    color: #333333; } }

.navbar .menu-social li {
  margin-left: 30px; }
  .navbar .menu-social li a {
    text-transform: uppercase;
    color: #777;
    font-size: 1.5rem; }

.navbar .navbar-item img {
  max-height: 100%;
  width: 160px;
  transition: width 0.2s ease-in;
  -o-transition: width 0.2s ease-in;
  -ms-transition: width 0.2s ease-in;
  -moz-transition: width 0.2s ease-in;
  -webkit-transition: width 0.2s ease-in; }
  .navbar .navbar-item img.logo-small {
    width: 100px !important; }

/** random styles **/
.heading-number {
  border-bottom: 1px solid;
  display: inline-block;
  padding: 0 0 0 60px;
  margin-right: 5px;
  font-family: "Open Sans", sans-serif;
  font-style: none;
  font-size: .5em;
  margin-left: -60px; }

.corner-number {
  font-family: "Playfair Display", serif;
  font-style: italic;
  position: absolute;
  right: 20px;
  top: 20px;
  color: #c4c4c4;
  border-bottom: 1px solid;
  padding-left: 50px;
  font-size: 2.1em; }

.is-vertical-center {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.parallax-container {
  position: relative;
  height: 500px; }

.parallax {
  position: absolute;
  height: 200%;
  width: 100%;
  z-index: -1; }

.button,
.button.is-primary {
  border: none;
  background: none;
  font-family: "Playfair Display", serif;
  color: #4c7bac;
  border-top: 1px #4c7bac solid; }

.button.is-primary {
  color: #6a7071;
  border-color: #6a7071; }

.button {
  position: relative;
  background: whitesmoke;
  display: inline-block;
  outline: 0;
  overflow: hidden;
  background: none;
  z-index: 1;
  cursor: pointer;
  transition: 0.02s ease-in;
  -o-transition: 0.02s ease-in;
  -ms-transition: 0.02s ease-in;
  -moz-transition: 0.02s ease-in;
  -webkit-transition: 0.02s ease-in; }

.button:hover {
  color: white;
  border-color: #4c7bac;
  transition: color 0.2s ease;
  -webkit-transition: color 0.2s ease;
  -moz-transition: color 0.2s ease; }

.button.is-primary:hover {
  border-color: #6a7071; }

.button:before {
  content: "";
  position: absolute;
  background: #4c7bac;
  top: 0;
  left: 0;
  right: 0;
  bottom: 100%;
  z-index: -1;
  transition: bottom 0.2s ease;
  -webkit-transition: bottom 0.2s ease;
  -moz-transition: bottom 0.2s ease; }

.button.is-primary:before {
  background: #6a7071; }

.button:hover:before {
  bottom: 0; }

.page-heading {
  text-align: center;
  margin-top: -100px;
  background: rgba(255, 255, 255, 0.9);
  padding: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row; }

.photo-cell {
  width: 50%; }
  .photo-cell img {
    display: block;
    max-width: 100%; }

@media screen and (min-width: 1000px) {
  .photo-cell {
    width: calc(100% / 3);
    margin: .2em; } }

@media screen and (min-width: 600px) {
  .photo-cell {
    width: calc(50% - .5rem);
    margin: .2em; } }

@media screen and (min-width: 1000px) {
  .photo-cell {
    width: calc(33.3333% - .5rem);
    margin: .2em; } }

.slide-in {
  opacity: 0;
  position: relative; }

.slide-up-fade-in {
  animation: slide-up-fade-in ease 1s;
  animation-iteration-count: 1;
  transform-origin: 50% 50%;
  animation-fill-mode: forwards;
  /*when the spec is finished*/
  -webkit-animation: slide-up-fade-in ease 1s;
  -webkit-animation-iteration-count: 1;
  -webkit-transform-origin: 50% 50%;
  -webkit-animation-fill-mode: forwards;
  /*Chrome 16+, Safari 4+*/
  -moz-animation: slide-up-fade-in ease 1s;
  -moz-animation-iteration-count: 1;
  -moz-transform-origin: 50% 50%;
  -moz-animation-fill-mode: forwards;
  /*FF 5+*/
  -o-animation: slide-up-fade-in ease 1s;
  -o-animation-iteration-count: 1;
  -o-transform-origin: 50% 50%;
  -o-animation-fill-mode: forwards;
  /*Not implemented yet*/
  -ms-animation: slide-up-fade-in ease 1s;
  -ms-animation-iteration-count: 1;
  -ms-transform-origin: 50% 50%;
  -ms-animation-fill-mode: forwards;
  /*IE 10+*/
  opacity: 0;
  opacity: 1\9; }

@keyframes slide-up-fade-in {
  0% {
    opacity: 0;
    -webkit-transform: translate(0px, 120px);
            transform: translate(0px, 120px); }
  100% {
    opacity: 1;
    -webkit-transform: translate(0px, 0px);
            transform: translate(0px, 0px); } }

@-webkit-keyframes slide-up-fade-in {
  0% {
    opacity: 0;
    -webkit-transform: translate(0px, 120px); }
  100% {
    opacity: 1;
    -webkit-transform: translate(0px, 0px); } }

.clearfix {
  clear: both;
  zoom: 1; }

/*!
 * baguetteBox.js
 * @author  feimosi
 * @version %%INJECT_VERSION%%
 * @url https://github.com/feimosi/baguetteBox.js
 */
#baguetteBox-overlay {
  display: none;
  opacity: 0;
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000000;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-transition: opacity .5s ease;
  transition: opacity .5s ease; }
  #baguetteBox-overlay.visible {
    opacity: 1; }
  #baguetteBox-overlay .full-image {
    display: inline-block;
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center; }
    #baguetteBox-overlay .full-image figure {
      display: inline;
      margin: 0;
      height: 100%; }
    #baguetteBox-overlay .full-image img {
      display: inline-block;
      width: auto;
      height: auto;
      max-height: 100%;
      max-width: 100%;
      vertical-align: middle;
      -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
              box-shadow: 0 0 8px rgba(0, 0, 0, 0.6); }
    #baguetteBox-overlay .full-image figcaption {
      display: block;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-align: center;
      line-height: 1.8;
      white-space: normal;
      color: #ccc;
      background-color: #000;
      background-color: rgba(0, 0, 0, 0.6);
      font-family: sans-serif; }
    #baguetteBox-overlay .full-image:before {
      content: "";
      display: inline-block;
      height: 50%;
      width: 1px;
      margin-right: -1px; }

#baguetteBox-slider {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  white-space: nowrap;
  -webkit-transition: left .4s ease, -webkit-transform .4s ease;
  transition: left .4s ease, -webkit-transform .4s ease;
  transition: left .4s ease, transform .4s ease;
  transition: left .4s ease, transform .4s ease, -webkit-transform .4s ease; }
  #baguetteBox-slider.bounce-from-right {
    -webkit-animation: bounceFromRight .4s ease-out;
            animation: bounceFromRight .4s ease-out; }
  #baguetteBox-slider.bounce-from-left {
    -webkit-animation: bounceFromLeft .4s ease-out;
            animation: bounceFromLeft .4s ease-out; }

@-webkit-keyframes bounceFromRight {
  0% {
    margin-left: 0; }
  50% {
    margin-left: -30px; }
  100% {
    margin-left: 0; } }

@keyframes bounceFromRight {
  0% {
    margin-left: 0; }
  50% {
    margin-left: -30px; }
  100% {
    margin-left: 0; } }

@-webkit-keyframes bounceFromLeft {
  0% {
    margin-left: 0; }
  50% {
    margin-left: 30px; }
  100% {
    margin-left: 0; } }

@keyframes bounceFromLeft {
  0% {
    margin-left: 0; }
  50% {
    margin-left: 30px; }
  100% {
    margin-left: 0; } }

.baguetteBox-button#next-button, .baguetteBox-button#previous-button {
  top: 50%;
  top: calc(50% - 30px);
  width: 44px;
  height: 60px; }

.baguetteBox-button {
  position: absolute;
  cursor: pointer;
  outline: none;
  padding: 0;
  margin: 0;
  border: 0;
  border-radius: 15%;
  background-color: #323232;
  background-color: rgba(50, 50, 50, 0.5);
  color: #ddd;
  font: 1.6em sans-serif;
  -webkit-transition: background-color .4s ease;
  transition: background-color .4s ease; }
  .baguetteBox-button:focus, .baguetteBox-button:hover {
    background-color: rgba(50, 50, 50, 0.9); }
  .baguetteBox-button#next-button {
    right: 2%; }
  .baguetteBox-button#previous-button {
    left: 2%; }
  .baguetteBox-button#close-button {
    top: 20px;
    right: 2%;
    right: calc(2% + 6px);
    width: 30px;
    height: 30px; }
  .baguetteBox-button svg {
    position: absolute;
    left: 0;
    top: 0; }

/*
    Preloader
    Borrowed from http://tobiasahlin.com/spinkit/
*/
.baguetteBox-spinner {
  width: 40px;
  height: 40px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px; }

.baguetteBox-double-bounce1,
.baguetteBox-double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  opacity: .6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: bounce 2s infinite ease-in-out;
          animation: bounce 2s infinite ease-in-out; }

.baguetteBox-double-bounce2 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s; }

@-webkit-keyframes bounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  50% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

@keyframes bounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  50% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */
code[class*="language-"],
pre[class*="language-"] {
  color: black;
  background: none;
  text-shadow: 0 1px white;
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  font-size: 1em;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  hyphens: none; }

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: #b3d4fc; }

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
  text-shadow: none;
  background: #b3d4fc; }

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none; } }

/* Code blocks */
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto; }

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #f5f2f0; }

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal; }

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray; }

.token.punctuation {
  color: #999; }

.namespace {
  opacity: .7; }

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #905; }

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #690; }

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #9a6e3a;
  background: rgba(255, 255, 255, 0.5); }

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a; }

.token.function,
.token.class-name {
  color: #DD4A68; }

.token.regex,
.token.important,
.token.variable {
  color: #e90; }

.token.important,
.token.bold {
  font-weight: bold; }

.token.italic {
  font-style: italic; }

.token.entity {
  cursor: help; }

.background-light {
  background: #f0efef; }

.background-medium {
  background: #777;
  color: white; }

.background-dark {
  background: #444;
  color: white; }

.visually-hidden:not(:focus):not(:active) {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px); }

.skip-link {
  font-family: "Playfair Display", serif;
  font-size: 1.5rem;
  font-weight: bold;
  position: absolute;
  top: 60px;
  z-index: 1; }

.subtitle {
  display: inline-block;
  position: relative; }

.subtitle:before {
  left: -75px;
  content: "";
  display: block;
  width: 60px;
  height: 0;
  border-bottom: 1px solid #fff;
  position: absolute;
  top: 50%; }

.subtitle:after {
  right: -75px;
  content: "";
  display: block;
  width: 60px;
  height: 0;
  border-bottom: 1px solid #fff;
  position: absolute;
  top: 50%; }

.navbar-end {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .navbar-end form {
      padding: 1rem; }
      .navbar-end form .control:first-child {
        width: 100%; } }

.button, .input, .textarea, .select select {
  border-radius: 0; }

.notification ul {
  margin: 0.5em 1.4em;
  list-style-type: disc; }

.teaser {
  font-weight: bold;
  margin-bottom: 1rem; }

.card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%; }

.card-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%; }
  .card-content .button:last-child {
    margin-top: auto; }

.section-latest-entries .buttons {
  margin-top: 1.5rem; }

.tags {
  margin-top: 3rem; }
  .tags .label {
    margin-right: .5em; }

.section-record .image {
  margin-top: 3rem;
  margin-bottom: 3rem; }

.button {
  text-decoration: none; }

p.meta {
  margin-top: 1rem;
  color: #777;
  font-size: 90%; }

@media screen and (max-width: 768px) {
  .media {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; } }

.media-right {
  -ms-flex-negative: 1;
      flex-shrink: 1;
  margin-left: 0; }
  @media screen and (max-width: 768px) {
    .media-right {
      -webkit-box-ordinal-group: 0;
          -ms-flex-order: -1;
              order: -1;
      width: 100%;
      margin-bottom: 1rem; } }

.imageholder img {
  width: 100%; }

.notification > .delete {
  right: .5rem;
  top: .5rem; }

.hero.hero-image {
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  margin-top: 52px; }

.hero.is-large .hero-body {
  padding-bottom: 4rem;
  padding-top: 4rem;
  color: #ffffff; }
  .hero.is-large .hero-body h1.title,
  .hero.is-large .hero-body h2.subtitle {
    text-shadow: 2px 2px 15px rgba(0, 0, 0, 0.4); }
  .hero.is-large .hero-body h1.title {
    font-size: 2rem;
    font-weight: light; }
  .hero.is-large .hero-body h2.subtitle {
    font-size: 1.5rem; }
  @media screen and (min-width: 769px), print {
    .hero.is-large .hero-body {
      padding-bottom: 12rem;
      padding-top: 12rem; }
      .hero.is-large .hero-body h1.title {
        font-size: 2.5rem; }
      .hero.is-large .hero-body h2.subtitle {
        font-size: 1.875rem; } }
  @media screen and (min-width: 1088px) {
    .hero.is-large .hero-body {
      padding-bottom: 16rem;
      padding-top: 16rem; }
      .hero.is-large .hero-body h1.title {
        font-size: 3rem; }
      .hero.is-large .hero-body h2.subtitle {
        font-size: 2.25rem; } }

.footer {
  padding: 4rem 1.5rem;
  font-size: 13px;
  font-weight: 200; }
  .footer p, .footer li {
    text-transform: uppercase; }
  .footer .quote {
    display: block;
    font-size: 35px;
    line-height: 1.1428;
    font-style: italic;
    font-family: "Playfair Display", serif;
    opacity: 0.2; }
  .footer .author {
    display: inline-block;
    position: relative;
    text-transform: uppercase;
    font-weight: 600;
    margin-top: 20px;
    color: #4c7bac; }
    .footer .author::before {
      left: -75px;
      content: "";
      display: block;
      width: 60px;
      height: 0;
      border-bottom: 1px solid #6a7071;
      position: absolute;
      top: 50%; }

[data-background-image] {
  position: relative; }

[data-background-image] .dark-overlay {
  /*	This is the element that is going to darken the background image
	By default, it's entirely black, but the JS code will give it
	some transparency by setting its opacity to a calculated value.
	The brighter the image, the higher the opacity, to compensate ! */
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black; }

pre .tag {
  margin: 0;
  padding: 0;
  background-color: transparent;
  display: inherit;
  font-size: inherit; }

pre .number {
  font-size: 1em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
